rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    function isRequestedUser(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }

    match /users/{uid} {
      allow read, write: if isRequestedUser(uid);
    }

    match /offers/{uid} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && resource.data.owner.id == request.auth.uid;
    }

    match /chats/{chatId} {
      function isUserChatMember(members) {
        let userId = request.auth.uid;
        return userId in members && members[userId].isActive == true;
      }

      allow read: if isAuthenticated() &&
                     resource != null &&
                     isUserChatMember(resource.data.members)
      allow write: if false;

      match /messages/{messageId} {
        function getChatRoomData() {
          return get(/databases/$(database)/documents/chats/$(chatId)).data;
        }

        allow read, write: if isAuthenticated() && isUserChatMember(getChatRoomData().members)
      }
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
